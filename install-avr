#!/bin/bash


# Builds and installs avr-gcc with ATtiny1634 support.
#
#   Binutils, GCC and libc are built and installed for
#   the AVR target, using the most recent version of each.


# Install dependencies:

sudo apt-get update
sudo apt-get install build-essential libgmp-dev libmpfr-dev libmpc-dev


# Temporary build directory:

mkdir ~/build-avr

# Prepare installation directory:

sudo mkdir /usr/local/avr
sudo chown "$USER" /usr/local/avr || exit


# Add installation directory to PATH:

export PREFIX=/usr/local/avr
export PATH=$PATH:$PREFIX/bin


# Build and install binutils:

cd ~/build-avr
wget http://ftp.gnu.org/gnu/binutils/binutils-2.26.tar.bz2
tar xvfj binutils-2.26.tar.bz2
mkdir ~/build-avr/binutils-2.26/obj-avr
cd ~/build-avr/binutils-2.26/obj-avr || exit
../configure --prefix=$PREFIX --target=avr --disable-nls
make
make install


# Build and install gcc:

cd ~/build-avr
wget http://mirrors.concertpass.com/gcc/releases/gcc-6.1.0/gcc-6.1.0.tar.bz2
tar xvfj gcc-6.1.0.tar.bz2
mkdir ~/build-avr/gcc-6.1.0/obj-avr
cd ~/build-avr/gcc-6.1.0/obj-avr || exit
../configure --prefix=$PREFIX --target=avr --enable-languages=c,c++ --disable-nls --disable-libssp --with-dwarf2
make
make install


# Build and install (avr-)libc:

cd ~/build-avr
wget http://download.savannah.gnu.org/releases/avr-libc/avr-libc-2.0.0.tar.bz2
tar xvfj avr-libc-2.0.0.tar.bz2
cd ~/build-avr/avr-libc-2.0.0 || exit
./configure --prefix=$PREFIX --build="$(./config.guess)" --host=avr
make
make install


# Remove installation artifacts:

cd ~
rm -rf build-avr


# Automate future PATH updates:

echo "export PATH=$PATH:/usr/local/avr" >> ~/.bashrc


# Remind user to update PATH::

echo "The current terminal won't work until you enter: export PATH=$PATH:/usr/local/avr/bin"
